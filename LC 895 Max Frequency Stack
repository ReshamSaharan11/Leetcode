class FreqStack {
    
    private class Pair implements Comparable<Pair>{
        int val = 0;
        int idx = 0;
        int freq = 0;
        
        Pair(int val,int idx,int freq){
            this.val = val;
            this.idx = idx;
            this.freq = freq;
        }
        
        public int compareTo(Pair o){
            if(this.freq == o.freq) return o.idx - this.idx;
            else return o.freq - this.freq;
        }
    }

    private PriorityQueue<Pair> pq;
    private int idx;
    private HashMap<Integer,Integer> freq;
    public FreqStack() {
       pq = new PriorityQueue<>();
       freq = new HashMap<>(); 
    }
    
    public void push(int val) {
        freq.put(val,freq.getOrDefault(val,0) + 1);
        pq.add(new Pair(val,idx++,freq.get(val)));
    }
    
    public int pop() {
        Pair rp = pq.remove();
        freq.put(rp.val,rp.freq - 1);
        if(freq.get(rp.val) == 0) freq.remove(rp.val);
        return rp.val;
        
    }
}
