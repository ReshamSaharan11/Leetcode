class Solution {
    public int furthestBuilding(int[] heights, int bricks, int ladders) {
        int n = heights.length;
        
        PriorityQueue<Integer> pq = new PriorityQueue<>(); // make priority Queue on diff
        
        for(int i=1;i<n;i++){
            int currDiff = heights[i] - heights[i-1];
            
            if(currDiff > 0){
                pq.add(currDiff);
                
                if(pq.size() > ladders) bricks -= pq.remove();
                
                if(bricks < 0) return i - 1;
            }
        }
        
        return n - 1;
        
    }
}

// less diff is covered by bricks
// greater diff covered by ladders
